{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/ui/DeleteEventFab.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/calendar/CalendarScreen.js","components/ui/LoadingScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","start","moment","format","end","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","eventAddNew","event","eventUnsetActive","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","lemail","lpassword","formLoginValues","handleLoginInputChange","rname","remail","rpassword","rconfirmPassword","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","message","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","uiCloseModal","DeleteEventFab","getState","msg","console","log","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","CalendarModal","titleValid","settitleValid","notes","formValues","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","eventDB","_id","eventStartAddNew","min","autoComplete","rows","AddNewFab","updateLocale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","error","eventos","i","toDate","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","LoadingScreen","PublicRoute","isAuthenticated","Component","component","rest","props","to","protoTypes","PropTypes","bool","isRequired","func","PrivateRoute","location","search","undefined","pathname","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"sNAAaA,EACI,kBADJA,EAEK,mBAFLA,EAKI,kBALJA,EAMO,qBANPA,EAOS,uBAPTA,EAQK,wBARLA,EASK,wBATLA,EAUI,wBAVJA,EAWI,uBAXJA,EAeW,+BAfXA,EAiBE,eAjBFA,EAoBG,gBClBVC,EAAe,CACjBC,UAAU,G,yBCaRD,EAAc,CAChBE,OAAO,GACPC,YAAa,MChBXH,EAAe,CACjBI,WAAW,GCEFC,EAAcC,YAAgB,CACvCC,GDAqB,WAAkC,IAAjCC,EAAgC,uDAAxBR,EAAcS,EAAU,uCAEtD,OAAQA,EAAOC,MAEX,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIJ,WAAW,IAGnB,KAAKL,EACD,OAAO,2BACAS,GADP,IAEIJ,WAAW,IAGnB,QACI,OAAOI,IChBfG,SFc2B,WAAmC,IAAlCH,EAAiC,uDAAzBR,EAAcS,EAAW,uCAC7D,OAAQA,EAAOC,MACX,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIL,YAAY,2BAAIM,EAAOG,SAAZ,IACKC,MAAOC,IAAOL,EAAOG,QAAQC,OAAOE,OAAO,oBAC3CC,IAAKF,IAAOL,EAAOG,QAAQI,KAAKD,OAAO,wBAG/D,KAAKhB,EACD,OAAO,2BACAS,GADP,IAEIN,OAAO,GAAD,mBACCM,EAAMN,QADP,CAEFO,EAAOG,YAGnB,KAAKb,EACD,kCACOS,GADP,IAEIL,YAAa,OAGrB,KAAKJ,EACD,kCACOS,GADP,IAEIN,OAAQM,EAAMN,OAAOe,KACjB,SAAAC,GAAC,OAAKA,EAAEC,KAAOV,EAAOG,QAAQO,GAAMV,EAAOG,QAAUM,OAIjE,KAAKnB,EACD,kCACOS,GADP,IAEIN,OAAQM,EAAMN,OAAOkB,QACjB,SAAAF,GAAC,OAAKA,EAAEC,KAAOX,EAAML,YAAYgB,MAErChB,YAAa,OAGrB,KAAKJ,EACD,kCACOS,GADP,IAEIN,OAAO,YAAKO,EAAOG,WAG3B,KAAKb,EACD,sBACOC,GAGX,QACI,OAAOQ,IElEfa,KHAuB,WAAmC,IAAlCb,EAAiC,uDAAzBR,EAAcS,EAAW,uCAC7D,OAAQA,EAAOC,MACX,KAAKX,EACD,8CACOS,GACAC,EAAOG,SAFd,IAGIX,UAAU,IAGlB,KAAKF,EACD,kCACOS,GADP,IAEIP,UAAU,IAElB,KAAKF,EACD,MAAM,CACFE,UAAS,GAGjB,QACI,OAAOO,MIxBTc,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAG9FC,EAAQC,YACjBtB,EACAiB,EACIM,YAAgBC,O,yDCVlBC,EAAUC,8CAGVC,EAAoB,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAC1CC,EAAG,UAAMN,EAAN,YAAiBG,GAC1B,MAAc,QAAXE,EACQE,MAAMD,GAENC,MAAMD,EAAI,CACbD,SACAG,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAUP,MAM3BQ,EAAiB,SAACT,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACvCC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAC/C,MAAc,QAAXV,EACQE,MAAMD,EAAI,CACbD,SACAG,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,UAAWK,KAIZN,MAAMD,EAAI,CACbD,SACAG,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,MCV3BY,EAAc,SAACC,GAAD,MAAY,CAC5BrC,KAAMX,EACNa,QAASmC,IAQAC,EAAmB,iBAAO,CACnCtC,KAAMX,IAmBJkD,EAAe,SAACF,GAAD,MAAY,CAC7BrC,KAAMX,EACNa,QAASmC,IAqBPG,EAAe,iBAAO,CACxBxC,KAAMX,IAiBJoD,EAAc,SAACjD,GAAD,MAAa,CAC7BQ,KAAMX,EACNa,QAASV,IC1CPkD,EAAiB,iBAAO,CAC1B1C,KAAMX,IAGJsD,EAAQ,SAACC,GAAD,MAAW,CACrB5C,KAAMX,EACNa,QAAS0C,IAGAC,EAAc,WACvB,OAAO,SAACC,GACJZ,aAAaa,QACbD,EDiC0B,CAC9B9C,KAAMX,ICjCFyD,EAASE,OAIXA,EAAS,iBAAO,CAClBhD,KAAMX,I,QC7EG4D,EAAU,WAAwB,IAAvB3D,EAAsB,uDAAP,GACnC,EAA4B4D,mBAAS5D,GAArC,mBAAO6D,EAAP,KAAeC,EAAf,KACMC,EAAQ,WAAkC,IAAhCC,EAA+B,uDAAhBhE,EAC3B8D,EAAUE,IAGRC,EAAoB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBJ,EAAU,2BACHD,GADE,kBAEJK,EAAOC,KAAMD,EAAOE,UAI7B,MAAO,CAACP,EAAQI,EAAmBF,EAAOD,I,eCPjCO,EAAc,WAEvB,IAAMb,EAAWc,cAEjB,EAA8DX,EAAQ,CAClEY,OAAQ,wBACRC,UAAW,WAFf,mBAAOC,EAAP,KAAwBC,EAAxB,KAKA,GALA,KAKuEf,EAAQ,CAC3EgB,MAAO,QACPC,OAAQ,wBACRC,UAAW,SACXC,iBAAkB,YAJtB,mBAAOC,EAAP,KAA2BC,EAA3B,KAOOT,GAPP,KAO6BE,EAAtBF,QAAQC,EAAcC,EAAdD,UACRG,EAA+CI,EAA/CJ,MAAOC,EAAwCG,EAAxCH,OAAQC,EAAgCE,EAAhCF,UAAWC,EAAqBC,EAArBD,iBAejC,OAEI,qBAAKG,UAAU,4BAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,yCACA,uBAAMC,SApBN,SAAChE,GFpBC,IAACiE,EAAOC,EEqB1BlE,EAAEmE,iBACF7B,GFtBmB2B,EEsBCZ,EFtBMa,EEsBEZ,EFrBhC,uCAAO,WAAMhB,GAAN,iBAAA8B,EAAA,sEACgBtD,EAAkB,OAAO,CAACmD,QAAMC,YAAU,QAD1D,cACGG,EADH,gBAEgBA,EAAKC,OAFrB,OAEGjD,EAFH,OAIAgD,EAAKE,IACJ7C,aAAa8C,QAAQ,QAAQnD,EAAKI,OAClCC,aAAa8C,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDpC,EAASH,EAAM,CACXwC,IAAKtD,EAAKsD,IACV1B,KAAM5B,EAAK4B,SAGf2B,IAAKC,KAAK,QAAQxD,EAAKyD,QAAQzD,EAAKyD,QAAQ,uBAAuB,SAZpE,2CAAP,yDEuCoB,UACI,qBAAKf,UAAU,aAAf,SACI,uBACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAOG,EACP2B,SAAUxB,MAGlB,qBAAKO,UAAU,aAAf,SACI,uBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,YACLC,MAAOI,EACP0B,SAAUxB,MAGlB,qBAAKO,UAAU,aAAf,SACI,uBACIvE,KAAK,SACLuE,UAAU,YACVb,MAAM,kBAMtB,sBAAKa,UAAU,wBAAf,UACI,0CACA,uBAAMC,SAhDH,SAAChE,GAEpB,GADAA,EAAEmE,iBACCR,IAAcC,EACb,OAAOgB,IAAKC,KAAK,OAAO,kCAA+B,SFVtC,IAAC5B,EAAMgB,EAAOC,EEYnC5B,GFZsBW,EEYCQ,EFZKQ,EEYCP,EFZMQ,EEYCP,EFXxC,uCAAO,WAAMrB,GAAN,iBAAA8B,EAAA,sEACgBtD,EAAkB,WAAW,CAACmC,OAAKgB,QAAMC,YAAU,QADnE,cACGG,EADH,gBAEgBA,EAAKC,OAFrB,OAEGjD,EAFH,OAIAgD,EAAKE,IACJ7C,aAAa8C,QAAQ,QAAQnD,EAAKI,OAClCC,aAAa8C,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDpC,EAASH,EAAM,CACXwC,IAAKtD,EAAKsD,IACV1B,KAAM5B,EAAK4B,SAGf2B,IAAKC,KAAK,QAAQxD,EAAKyD,QAAQzD,EAAKyD,QAAQ,uBAAuB,SAZpE,2CAAP,yDEsDoB,UACI,qBAAKf,UAAU,aAAf,SACI,uBACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,SACZC,SAAYlB,EACZb,KAAK,QACLC,MAAOO,MAGf,qBAAKM,UAAU,aAAf,SACI,uBACIvE,KAAK,QACLuE,UAAU,eACVgB,YAAY,SACZC,SAAYlB,EACZb,KAAK,SACLC,MAAOQ,MAGf,qBAAKK,UAAU,aAAf,SACI,uBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,gBACZC,SAAYlB,EACZb,KAAK,YACLC,MAAOS,MAIf,qBAAKI,UAAU,aAAf,SACI,uBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,0BACZC,SAAYlB,EACZb,KAAK,mBACLC,MAAOU,MAIf,qBAAKG,UAAU,aAAf,SACI,uBACIvE,KAAK,SACLuE,UAAU,YACVb,MAAM,iCC3H7B+B,EAAS,WAClB,IAAM3C,EAAWc,cACVH,EAAQiC,aAAY,SAAA5F,GAAK,OAAIA,EAAMa,QAAnC8C,KAKP,OACI,sBAAKc,UAAU,kCAAf,UACI,sBAAMA,UAAU,eAAhB,SACKd,IAEL,yBACIc,UAAU,yBACVoB,QAXQ,WAChB7C,EAASD,MAQL,UAII,mBAAG0B,UAAU,wBACb,iD,SCrBHqB,I,MAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNjE,MAAO,SACPkE,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,QCXNC,I,MAAgB,SAAC,GAAa,IAAZrE,EAAW,EAAXA,MACrBsE,EAAatE,EAAbsE,MAAM/D,EAAOP,EAAPO,KACZ,OACI,gCACI,iCAAS+D,IACT,sCAAS/D,EAAKa,a,oBCLbmD,GAAc,iBAAO,CAC9B5G,KAAKX,IAGIwH,GAAe,iBAAO,CAC/B7G,KAAKX,ICDIyH,GAAiB,WAC1B,IAAMhE,EAAWc,cAQjB,OACI,yBACIW,UAAY,4BACZoB,QATa,WACjB7C,ERwDJ,uCAAO,WAAOA,EAAUiE,GAAjB,mBAAAnC,EAAA,6DAEInE,EAAMsG,IAAW9G,SAASR,YAA1BgB,GAFJ,kBAIoBuB,EAAe,UAAD,OAAWvB,GAAK,GAAG,UAJrD,cAIOoE,EAJP,gBAKoBA,EAAKC,OALzB,OAKOjD,EALP,OAMKgD,EAAKE,GACLjC,EAASN,KAET4C,IAAKC,KAAK,QAASxD,EAAKmF,IAAK,SATlC,kDAYCC,QAAQC,IAAR,MAZD,0DAAP,yDQvDIpE,EAAS+D,OAKT,UAII,mBAAGtC,UAAU,iBACb,+CCVN4C,GAAe,CACjBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIjBC,KAAMC,cAAc,SACpB,IAAMC,GAAMzH,MAAS0H,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAE,SAAS3H,OAAO,oBAC3D4H,GAAW7H,MAAS0H,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAE,SAAS3H,OAAO,oBAEzD6H,GAAgB,WACzB,IAAMpF,EAAWc,cACVlE,EAAagG,aAAY,SAAA5F,GAAK,OAAGA,EAAMD,MAAvCH,UACAD,EAAeiG,aAAY,SAAA5F,GAAK,OAAGA,EAAMG,YAAzCR,YAEP,EAAoCyD,oBAAS,GAA7C,mBAAOiF,EAAP,KAAmBC,EAAnB,KACA,EAA0DnF,EAAQ,CAC9D0D,MAAO,SACP0B,MAAO,SACPlI,MAAO0H,GACPvH,IAAK2H,KAJT,mBAAOK,EAAP,KAAmB/E,EAAnB,KAAsCF,EAAtC,KAA6CD,EAA7C,KAOOuD,EAA4B2B,EAA5B3B,MAAO0B,EAAqBC,EAArBD,MAAOlI,EAAcmI,EAAdnI,MAAOG,EAAOgI,EAAPhI,IAE5BiI,qBAAU,WACH9I,EACC2D,EAAU3D,GAEV4D,MAEL,CAAC5D,EAAY2D,IAGhB,IAAMoF,EAAa,WACf1F,EAAS+D,MACT/D,EAASR,KACTe,KA6BJ,OACI,eAAC,KAAD,CACIoF,OAAQ/I,EAERgJ,eAAgBF,EAChBG,MAAOxB,GACP5C,UAAU,QACVqE,iBAAiB,cACjBC,eAAgB,IAPpB,UAUI,sBAAKtE,UAAU,cAAf,UAGS9E,EAAc,iDAA2B,gDAIzCA,GAAe,cAAC,GAAD,OAKxB,uBACA,uBAAM8E,UAAU,YAAYC,SAlDX,SAAChE,GACtBA,EAAEmE,iBACF,ITdyBtC,EScnByG,EAAc1I,IAAOD,GACrB4I,EAAY3I,IAAOE,GAEzB,OAAGwI,EAAYE,cAAcD,GAClB3D,IAAKC,KAAK,QAAQ,+DAA4D,SAGtFsB,EAAMsC,OAAOC,OAAO,EACZd,GAAc,IAKrBtF,EADDrD,GT1BsB4C,ES2BKiG,ET1BlC,uCAAO,WAAOxF,GAAP,iBAAA8B,EAAA,+EAEoB5C,EAAe,UAAD,OAAWK,EAAM5B,IAAK4B,EAAM,OAF9D,cAEOwC,EAFP,gBAGoBA,EAAKC,OAHzB,OAGOjD,EAHP,OAIKgD,EAAKE,GACLjC,EAASP,EAAaF,IAEtB+C,IAAKC,KAAK,QAASxD,EAAKmF,IAAK,SAPlC,kDAUCC,QAAQC,IAAR,MAVD,0DAAP,uDAxC4B,SAAC7E,GAC7B,8CAAO,WAAOS,EAAUiE,GAAjB,uBAAAnC,EAAA,+DAEiBmC,IAAWpG,KAAxBwE,EAFJ,EAEIA,IAAK1B,EAFT,EAESA,KAFT,kBAKoBzB,EAAe,SAAUK,EAAO,QALpD,cAKOwC,EALP,gBAMoBA,EAAKC,OANzB,OAMOjD,EANP,OAOIgD,EAAKE,KACJ1C,EAAM5B,GAAKoB,EAAKsH,QAAQ1I,GACxB4B,EAAMO,KAAO,CACTwG,IAAKjE,EACL1B,KAAMA,GAEVX,EAASV,EAAYC,KAb1B,kDAiBC4E,QAAQC,IAAR,MAjBD,0DAAP,wDSmEiBmC,CAAiBf,IAI9BF,GAAc,QACdI,MA4BI,UAEI,sBAAKjE,UAAU,oBAAf,UACI,wDAEA,uBACIvE,KAAK,iBACLuE,UAAU,eACVgB,YAAY,eACZ9B,KAAM,QACNC,MAAOvD,EACPqF,SAAUjC,OAIlB,sBAAKgB,UAAU,aAAf,UACI,qDACA,uBACIvE,KAAK,iBACLuE,UAAU,eACVgB,YAAY,eACZ9B,KAAM,MACN+B,SAAUjC,EACVG,MAAOpD,EACPgJ,IAAKnJ,OAIb,uBACA,sBAAKoE,UAAU,aAAf,UACI,mDACA,uBACIvE,KAAK,OACLuE,UAAS,wBAAmB4D,GAAc,cAC1C5C,YAAY,uBACZ9B,KAAK,QACL8F,aAAa,MACb7F,MAAOiD,EACPnB,SAAUjC,IAEd,uBAAO9C,GAAG,YAAY8D,UAAU,uBAAhC,yCAGJ,sBAAKA,UAAU,aAAf,UACI,0BACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,QACZiE,KAAK,IACL/F,KAAK,QACLC,MAAO2E,EACP7C,SAAUjC,IAEd,uBAAO9C,GAAG,YAAY8D,UAAU,uBAAhC,yCAGJ,yBACIvE,KAAK,SACLuE,UAAU,oCAFd,UAII,mBAAGA,UAAU,gBACb,sDCnKPkF,GAAY,WACrB,IAAM3G,EAAWc,cAMjB,OACI,wBACIW,UAAY,sBACZoB,QAPY,WAChB7C,EAAS8D,OAIT,SAII,mBAAGrC,UAAU,mBCDzBnE,IAAOsJ,aAAa,KAAM,CACtBC,OAAQ,2FAA2FC,MAAM,KACzGC,YAAa,6DAA6DD,MAAM,KAChFE,SAAU,uDAAuDF,MAAM,KACvEG,cAAe,gCAAgCH,MAAM,KACrDI,YAAa,uBAAuBJ,MAAM,OAE9CxJ,IAAO6J,OAAO,MAEd,IAAMC,GAAYC,aAAgB/J,KAIrBgK,GAAiB,WAC1B,IAAMtH,EAAWc,cAEVpE,EAAUkG,aAAY,SAAA5F,GAAK,OAAGA,EAAMG,YAApCT,OACA2F,EAAOO,aAAY,SAAA5F,GAAK,OAAGA,EAAMa,QAAjCwE,IAEP,EAAgCjC,mBAAShB,aAAaC,QAAQ,aAAa,SAA3E,mBAAOkI,EAAP,KAAiBC,EAAjB,KAIA/B,qBAAU,WACNzF,EXiDJ,uCAAO,WAAOA,GAAP,mBAAA8B,EAAA,+EAEoB5C,EAAe,UAFnC,cAEO6C,EAFP,gBAGoBA,EAAKC,OAHzB,OAGOjD,EAHP,OAIOrC,EAASqC,EAAKrC,OACpBsD,EAASL,EAAYjD,IALtB,kDAQCyH,QAAQsD,MAAR,MARD,0DAAP,yDWhDG,CAACzH,IAGJ,IAAM0H,EAAUhL,EAAOe,KAAI,SAAC8B,EAAOoI,GAAR,mBAAC,eACrBpI,GADoB,IAEvBlC,MAAOC,IAAOiC,EAAMlC,OAAOuK,SAC3BpK,IAAKF,IAAOiC,EAAM/B,KAAKoK,cAmC3B,OACI,sBAAKnG,UAAY,kBAAjB,UACI,cAAC,EAAD,IACA,qBAAKA,UAAY,WAAjB,SACI,cAAC,KAAD,CACA2F,UAAWA,GACX1K,OAAQgL,EACRG,cAAc,QACdC,YAAY,MACZhF,SAAYA,GACZiF,gBAxBa,SAACxI,EAAOlC,EAAOG,EAAKwK,GASzC,MAAM,CACFnC,MARS,CACToC,gBAAkB5F,IAAQ9C,EAAMO,KAAKwG,IAAO,UAAW,UACvD4B,aAAa,MACbC,QAAQ,GACRC,QAAS,QACTC,MAAO,WAkBHC,mBA3CU,SAAC5K,GACnBsC,EAAS8D,OA2CDyE,cAxCU,SAAC7K,GACnBsC,EXnBkC,CACtC9C,KAAMX,EACNa,QWiB4BM,KAwChB8K,OArCS,SAAC9K,GAClB8J,EAAY9J,GACZ0B,aAAa8C,QAAQ,WAAWxE,IAoCxB+K,KAAOlB,EACPmB,aAjCS,SAAChL,GAClBsC,EAASR,MAiCDmJ,YAAc,EACdC,WAAY,CACRrJ,MAAOqE,QAIX,cAAC,GAAD,IACA,cAAC,GAAD,Q,iBCtGHiF,GAAgB,WACzB,OACI,qBAAKpH,UAAU,UAAf,SACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,gBAAf,SACA,sBAAKA,UAAU,cAAf,UACI,wBACA,wBACA,kC,+DCNPqH,GAAc,SAAC,GAIrB,IAHHC,EAGE,EAHFA,gBACUC,EAER,EAFFC,UACGC,EACD,mBACF,OACI,cAAC,KAAD,2BAAWA,GAAX,IACID,UAAc,SAACE,GAAD,OACTJ,EACK,cAAC,KAAD,CAAUK,GAAG,MACb,cAACJ,EAAD,eAAeG,SAOrCL,GAAYO,WAAY,CACpBN,gBAAiBO,KAAUC,KAAKC,WAChCP,UAAWK,KAAUG,KAAKD,Y,uCCnBjBE,GAAe,SAAC,GAItB,IAHHX,EAGE,EAHFA,gBACUC,EAER,EAFFC,UACGC,EACD,mBAOF,MAL2B,IAAxBA,EAAKS,SAASC,aAAwCC,GAAxBX,EAAKS,SAASC,OAC3CxK,aAAa8C,QAAQ,WAAWgH,EAAKS,SAASG,SAAWZ,EAAKS,SAASC,QAEvExK,aAAa8C,QAAQ,WAAWgH,EAAKS,SAASG,UAG9C,cAAC,KAAD,2BAAWZ,GAAX,IACID,UAAc,SAACE,GAAD,OACTJ,EACK,cAACC,EAAD,eAAeG,IACf,cAAC,KAAD,CAAUC,GAAG,gBAOnCM,GAAaL,WAAY,CACrBN,gBAAiBO,KAAUC,KAAKC,WAChCP,UAAWK,KAAUG,KAAKD,YCfvB,IAAMO,GAAY,WAErB,IAAM/J,EAAWc,cACjB,EAAwB8B,aAAY,SAAA5F,GAAK,OAAIA,EAAMa,QAA5CpB,EAAP,EAAOA,SAAU4F,EAAjB,EAAiBA,IAMjB,OAJAoD,qBAAU,WACNzF,EdwBJ,uCAAO,WAAMA,GAAN,iBAAA8B,EAAA,sEACgB5C,EAAe,cAD/B,cACG6C,EADH,gBAEgBA,EAAKC,OAFrB,OAEGjD,EAFH,OAGAgD,EAAKE,IACJ7C,aAAa8C,QAAQ,QAAQnD,EAAKI,OAClCC,aAAa8C,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDpC,EAASH,EAAM,CACXwC,IAAKtD,EAAKsD,IACV1B,KAAM5B,EAAK4B,SAGfX,EAASJ,KAXV,2CAAP,yDcvBE,CAACI,IAEAvD,EACQ,cAAC,GAAD,IAGP,cAAC,KAAD,UACI,8BACI,eAAC,KAAD,WACI,cAAC,GAAD,CACIuN,OAAK,EACLC,KAAK,SACLhB,UAAWpI,EACXkI,kBAAoB1G,IAGxB,cAAC,GAAD,CACI2H,OAAK,EACLC,KAAK,IACLhB,UAAW3B,GACXyB,kBAAoB1G,IAGxB,cAAC,KAAD,CAAU+G,GAAK,cCvCtBc,GAAc,WACvB,OACI,cAAC,IAAD,CAAUhM,MAAOA,EAAjB,SACI,cAAC,GAAD,O,MCFZiM,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.02c496f0.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddnew: '[event] Add new',\r\n    eventSetActive: '[event] Set active',\r\n    eventUnsetActive: '[event] Unset active',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    eventLogout: '[event] Logout event',\r\n\r\n\r\n    authChecking: '[auth] Cheking login state',\r\n    authCheckingFinish: '[auth] Finish login checking',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\nswitch (action.type) {\r\n    case types.authLogin:\r\n        return{\r\n            ...state,\r\n            ...action.payload,\r\n            checking: false\r\n        }\r\n\r\n    case types.authCheckingFinish:\r\n        return{\r\n            ...state,\r\n            checking: false\r\n        }\r\n    case types.authLogout:\r\n        return{\r\n            checking:false\r\n        }\r\n\r\n    default:\r\n        return state;\r\n}\r\n}","import { types } from \"../types/types\";\r\nimport moment from 'moment';\r\n\r\n\r\n// {\r\n//     id:'ad34sad54f64sdf6sd',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().format(\"YYYY-MM-DDTHH:mm\"),\r\n//     end: moment().add(2, 'hour').format(\"YYYY-MM-DDTHH:mm\"),\r\n//     notes: 'Comprar pastel',\r\n//     user:{\r\n//         _id: '123',\r\n//         name: 'Pedro'\r\n//     }\r\n// }\r\n\r\nconst initialState ={\r\n    events:[],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent:{...action.payload,\r\n                                start: moment(action.payload.start).format(\"YYYY-MM-DDTHH:mm\"),\r\n                                end: moment(action.payload.end).format(\"YYYY-MM-DDTHH:mm\"),\r\n                            }\r\n            }\r\n        case types.eventAddnew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventUnsetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n            \r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n                \r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if(method === 'GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            if(resp.ok){\r\n                event.id = body.eventDB.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event));\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddnew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventUnsetActive = () => ({\r\n    type: types.eventUnsetActive\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken(`events/${event.id}`,event,'PUT');\r\n            const body = await resp.json();\r\n            if (resp.ok) {\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }       \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchWithToken(`events/${id}`,{},'DELETE');\r\n            const body = await resp.json();\r\n            if (resp.ok) {\r\n                dispatch(eventDeleted());\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }       \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n            const events = body.events;\r\n            dispatch(eventLoaded(events));\r\n            \r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});","import { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchWithoutToken('auth',{email,password},'POST');\r\n        const body = await resp.json();\r\n        //console.log(body);\r\n        if(resp.ok) {\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else{\r\n            Swal.fire('Error',body.message?body.message:'Ha ocurrido un error','error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchWithoutToken('auth/new',{name,email,password},'POST');\r\n        const body = await resp.json();\r\n        //console.log(body);\r\n        if(resp.ok) {\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else{\r\n            Swal.fire('Error',body.message?body.message:'Ha ocurrido un error','error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchWithToken('auth/renew');\r\n        const body = await resp.json();\r\n        if(resp.ok) {\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else{\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n};\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n    const reset = ( newFormState = initialState) =>{\r\n        setValues(newFormState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]:target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset, setValues];\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange, resetLogin] = useForm({\r\n        lemail: 'dagarcia100@gmail.com',\r\n        lpassword: '123456'\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange, resetRegister] = useForm({\r\n        rname: 'David',\r\n        remail: 'dagarcia100@gmail.com',\r\n        rpassword: '123456',\r\n        rconfirmPassword: '123456'\r\n    });\r\n\r\n    const{ lemail, lpassword } = formLoginValues;\r\n    const{ rname, remail, rpassword, rconfirmPassword } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lemail, lpassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if(rpassword !== rconfirmPassword){\r\n            return Swal.fire('Erro','Las contraseñas no coinciden','error');\r\n        }\r\n        dispatch(startRegister(rname,remail,rpassword));\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"principal-login-container\">\r\n            <div className=\"login-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 login-form-1\">\r\n                        <h3>Ingreso</h3>\r\n                        <form onSubmit={handleLogin}>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo\"\r\n                                    name=\"lemail\"\r\n                                    value={lemail}\r\n                                    onChange={handleLoginInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\"\r\n                                    name=\"lpassword\"\r\n                                    value={lpassword}\r\n                                    onChange={handleLoginInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"submit\"\r\n                                    className=\"btnSubmit\"\r\n                                    value=\"Login\" \r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 login-form-2\">\r\n                        <h3>Registro</h3>\r\n                        <form onSubmit={handleRegister}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre\"\r\n                                    onChange = {handleRegisterInputChange}\r\n                                    name=\"rname\"\r\n                                    value={rname}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo\"\r\n                                    onChange = {handleRegisterInputChange}\r\n                                    name=\"remail\"\r\n                                    value={remail}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\" \r\n                                    onChange = {handleRegisterInputChange}\r\n                                    name=\"rpassword\"\r\n                                    value={rpassword}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Repita la contraseña\" \r\n                                    onChange = {handleRegisterInputChange}\r\n                                    name=\"rconfirmPassword\"\r\n                                    value={rconfirmPassword}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"submit\" \r\n                                    className=\"btnSubmit\" \r\n                                    value=\"Crear cuenta\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth);\r\n    const handleLogout =() => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const{title,user} =event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({\r\n    type:types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type:types.uiCloseModal\r\n});","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\nimport { uiCloseModal } from '../../actions/ui';\r\n\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n        dispatch(uiCloseModal());\r\n    }\r\n\r\n\r\n    return (\r\n        <button\r\n            className = \"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal} from '../../actions/ui';\r\nimport { eventStartAddNew, eventStartUpdate, eventUnsetActive} from '../../actions/events';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n\r\nModal.setAppElement('#root');\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours').format(\"YYYY-MM-DDTHH:mm\");\r\nconst nowPlus1 = moment().minutes(0).seconds(0).add(2,'hours').format(\"YYYY-MM-DDTHH:mm\");\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n    const {modalOpen} = useSelector(state =>state.ui);\r\n    const {activeEvent} = useSelector(state =>state.calendar);\r\n\r\n    const [titleValid, settitleValid] = useState(true);\r\n    const [formValues, handleInputChange, reset, setValues] = useForm({\r\n        title: 'Evento',\r\n        notes: '123456',\r\n        start: now,\r\n        end: nowPlus1\r\n    });\r\n\r\n    const {title, notes, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent) {\r\n            setValues(activeEvent);\r\n        }else{\r\n            reset();\r\n        }\r\n    }, [activeEvent,setValues]);\r\n\r\n    \r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventUnsetActive());\r\n        reset();\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error','La fecha de finalización debe de ser mayor a la de inicio','error');\r\n        }\r\n\r\n        if(title.trim().length<1){\r\n            return settitleValid(false);\r\n        }\r\n\r\n        //TODO: realizar grabacion\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues));\r\n        }else{\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n \r\n        settitleValid(true);\r\n        closeModal();\r\n        \r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n\r\n        >\r\n            <div className=\"modal-title\">\r\n                \r\n                {\r\n                    (activeEvent ? <h2> Editar evento </h2> : <h2> Nuevo evento </h2>)\r\n                }\r\n\r\n                {\r\n                    (activeEvent && <DeleteEventFab/>)\r\n                }\r\n                \r\n            </div>\r\n\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n\r\n                <div className=\"form-group class1\" >\r\n                    <label>Fecha y hora inicio</label>\r\n\r\n                    <input \r\n                        type=\"datetime-local\"  \r\n                        className=\"form-control\" \r\n                        placeholder=\"Fecha inicio\" \r\n                        name= 'start'\r\n                        value={start}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <input \r\n                        type=\"datetime-local\"  \r\n                        className=\"form-control\" \r\n                        placeholder=\"Fecha inicio\" \r\n                        name= 'end'\r\n                        onChange={handleInputChange}\r\n                        value={end}\r\n                        min={start}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n                \r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n                \r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className = \"btn btn-primary fab\"\r\n            onClick={handleClick}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Navbar } from '../ui/Navbar'\r\n// the imports\r\nimport { Calendar, momentLocalizer  } from 'react-big-calendar' \r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from 'moment'\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventStartLoading, eventUnsetActive } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\n\r\nmoment.updateLocale('es', {\r\n    months: 'Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_Diciembre'.split('_'),\r\n    monthsShort: 'Enero._Feb._Mar_Abr._May_Jun_Jul._Ago_Sept._Oct._Nov._Dec.'.split('_'),\r\n    weekdays: 'Domingo_Lunes_Martes_Miercoles_Jueves_Viernes_Sabado'.split('_'),\r\n    weekdaysShort: 'Dom_Lun_Mar_Mier_Jue_Vier_Sab'.split('_'),\r\n    weekdaysMin: 'Do_Lu_Ma_Mi_Ju_Vi_Sa'.split('_')\r\n  })\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n    //TODO leer del store, los eventos\r\n    const {events} = useSelector(state =>state.calendar);\r\n    const {uid} = useSelector(state =>state.auth);\r\n\r\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView')||'month');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n\r\n    const eventos = events.map((event, i)=>({\r\n        ...event,\r\n        start: moment(event.start).toDate(),\r\n        end: moment(event.end).toDate()\r\n    }));\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    }\r\n\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventUnsetActive());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) =>{\r\n\r\n        const style ={\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7': '#465660',\r\n            borderRadius:'0px',\r\n            opacity:0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return{\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = 'calendar-screen'>\r\n            <Navbar/>\r\n            <div className = 'calendar'>\r\n                <Calendar \r\n                localizer={localizer}\r\n                events={eventos}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages = {messages}\r\n                eventPropGetter= {eventStyleGetter}\r\n                onDoubleClickEvent = {onDoubleClick}\r\n                onSelectEvent = {onSelectEvent}\r\n                onView = {onViewChange}\r\n                view ={lastView}\r\n                onSelectSlot = {onSelectSlot}\r\n                selectable = {true}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                />\r\n            </div>\r\n                <AddNewFab/>\r\n                <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const LoadingScreen = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <div className=\"auth__main\">\r\n                <div className=\"auth__loading\">\r\n                <div className=\"page-loader\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component = { (props)=>(\r\n                (isAuthenticated)\r\n                    ? <Redirect to=\"/\"/>\r\n                    : <Component {...props}/>\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.protoTypes ={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    if(rest.location.search != '' && rest.location.search != undefined){\r\n        localStorage.setItem('lastPath',rest.location.pathname + rest.location.search);\r\n    }else{\r\n        localStorage.setItem('lastPath',rest.location.pathname);\r\n    }\r\n    return (\r\n        <Route {...rest}\r\n            component = { (props)=>(\r\n                (isAuthenticated)\r\n                    ? <Component {...props}/>\r\n                    : <Redirect to=\"/login\"/>\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.protoTypes ={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoadingScreen } from '../components/ui/LoadingScreen';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    },[dispatch])\r\n\r\n    if(checking) {\r\n        return(<LoadingScreen/>)\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginScreen}\r\n                        isAuthenticated ={!!uid}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact \r\n                        path=\"/\" \r\n                        component={CalendarScreen}\r\n                        isAuthenticated ={!!uid}\r\n                    />\r\n\r\n                    <Redirect to = \"/\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport {Provider} from 'react-redux';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\n//console.log(process.env.REACT_APP_API_URL);\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}